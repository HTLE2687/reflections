When would you want to use a remote repository rather than keeping all your work
local?

Using a remote repository instead of keeping all your work local lets you work
on the same body of code from different computers. It also gives you an online
saved copy of all your work so if something happens to the local copy it is safe
 and allows you to share this code with other people.


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

You may want to always pull changes manually rather than having Git do it
automatically because your local changes might have conflicts with the remote
repository that you are not yet ready to resolve.


Describe the differences between forks, clones, and branches. When would you use
one instead of another?

Forks copy the code directly from someone else's repository to yours in Github.
Clones create a copy of the repository to your local machine. Branches save a
copy of the code from that point, letting you modify it without affecting the
main body of code until you merge it back in later. You would use forking to get
a copy of someone else's repository without having to create a local copy first,
cloning when you just want to get a local copy, and branching when you need to
make your own changes to the code but do not want to affect everyone else who is
still working on that body of code.


What is hte benefit of having a copy of the last known state of the remote
stored locally?

The benefit of having a copy of the last known state of the remote stored
locally is that we are able to compare our local copy with that instance of the
remote without having to directly access it through the internet, letting us
work offline if need be.


How would you collaborate without using Git or GitHub? What would be easier, and
what would be harder?

Without Git or Github, I would use another software versioning/revision control
system called TortoiseSVN. It is similar to GitHub but more GUI based so it is
easier to learn how to use, but harder to let others see your codebase as easily.
